unsigned long fun(unsigned long a, int b, int *pcs, int *count);

a = a63 .. a0
     64 ..  1
 
b = 1: suma xi = ai * (i+1)
    2: iloczyn xi = ai * (i+1)
    else : 0
 
pos = max i : ai =/= 0
 
count = sum 1 : ai =/= 0
        0: else
 
Funkcje dostaje 2 parametry wejściowe, 2 wyjściowe.
Pierwszy parametr to liczba 64 bitowa, ciąg bitów o wartosci 0 lub 1.
Jezeli 1 pojawia się na bicie najmniej znaczącym to interesuje nas 1.
 
a - jakie liczby
b - co z nimi zrobic, jak 1 to zsumowac, jak 2 to przez sb pomnorzyc, jak inna to zwracamy 0 (dla kazdego i suma/ mnozenie -> (ai+(i+1))) xi od 0 do 63, ich suma albo iloczyn
 
pcs -> pozycja ostatniego bitu w liczbie a róznego od 0, przy cyfrze 7 jest to 2 ( maksymalna pozycja na ktorym jedynka sie pojawiła)
 
count -> liczba bitow rownych 1
 
min musi zwrocic count i pos


#include <stdio.h>
#include <iostream>
#include <string>
#include <cmath>

using namespace std;

string reverse(string toReverse){
	string result = "";
	for (int i = toReverse.length()-1; i >= 0; i--){
		result += toReverse[i];
	}
	return result;
}

string switchToBin(long a){
	string result = "";
	while (a > 0){
		if (a%2 == 0)
			result += "0";
		else result += "1";
		a /= 2;
	}
	//return reverse(result);
	return result;
}


unsigned long fun(unsigned long a, int b, int *pcs, int *count){
	string as = switchToBin(a);
	cout << as << endl;
	for (int i = 0; i < as.length(); i++){
		if (as[i] == '0'){
			*pcs = i;
			break;
		}
		if (i == as.length() - 1 && *pcs == 0)
			*pcs = as.length()-2;
	}
	
//	cout << "pcs: " << *pcs << endl;

	int counter = 0;
	for (int i = 0; i < as.length(); i++){
		if (as[i] == '1')
			counter++;
	}
	*count = counter;
//	cout << "count " << *count << endl;

	unsigned long result = 0;
	if (b == 1){
		for (int i = 0; i < as.length(); i++){
			if (as[i] == '1'){
				result += pow(2,i);
			}
		}
	}
	if (b == 2){
		result = 1;
		for (int i = 0; i < as.length(); i++){
			if (as[i] == '1'){
				result *= pow(2,i);
			}
		}
	}

return result;
}	


int main(){
	
	printf("%d = ",7);
	cout << switchToBin(7) << endl;
	printf("%d = ",15);
	cout << switchToBin(15) << endl;
	printf("%d = ",8);
	cout << switchToBin(8) << endl;

	int pcs = 0;
	int count = 0;	
	printf("Test 1 : %ld \n", fun(7,1, &pcs, &count));
	cout << "pcs " << pcs << " count " <<  count << endl;
	printf("Test 2 : %ld \n", fun(8,2, &pcs, &count));
	cout << "pcs " << pcs << " count " <<  count << endl;
	return 0;
}
